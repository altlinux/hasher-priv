#!/bin/sh -e
#
# $Id$
# Copyright (C) 2003  Dmitry V. Levin <ldv@altlinux.org>
# 
# The chrootuid1 helper for the pkg-build-priv project
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#

PROG="${0##*/}"

Fatal()
{
	echo "${0##*/}: $@" >&2
	exit 1
}

Usage()
{
	cat >&2 <<EOF
pkg-build-useradd - adds pkg-build satellite users for already existing user,
                    and creates pkg-build-priv config file.

This program is free software, covered by the GNU General Public License.
pkg-build-useradd comes with ABSOLUTELY NO WARRANTY, see license for details.

Usage: $PROG [options] <user>

Valid options are:
--names=USER1:USER2     names for satellite users;
--number=NUMBER         subconfig identifier;
-h, --help              show this text.

By default, satellite user names will be choosen based on <user>.
EOF
	[ -n "$1" ] && exit "$1" || exit
}

TEMP=`getopt -n $PROG -o h -l names:,number:,help -- "$@"` || Usage
eval set -- "$TEMP"

names=
number=
while :; do
	case "$1" in
		--names) shift; names="$1"; shift
			;;
		--number) shift; number="$1"; shift
			;;
		-h|--help) Usage 0
			;;
		--) shift; break
			;;
		*) echo "$PROG: unrecognized option: $1" >&2; exit 1
			;;
	esac
done

[ "$#" -eq 1 ] || Usage

caller="$1"
shift

if [ -n "$number" ]; then
	if ! [ "$number" -ge 1 ] 2>/dev/null; then
		Fatal "invalid subconfig identifier: $number"
	fi
fi

if [ -n "$names" ]; then
	user1="${names%%:*}"
	user2="${names##*:}"
	if [ -z "$user1" -o -z "$user2" -o "$user1" = "$user2"  -o "$caller" = "$user1"  -o "$caller" = "$user2" ]; then
		Fatal "invalid names for satellite users: $names"
	fi
else
	user1="$caller"_a
	user2="$caller"_b
fi

id "$caller" >/dev/null
! id "$user1" >/dev/null 2>&1 ||
	Fatal "error creating satellite users: $user1 already exists"
! id "$user2" >/dev/null 2>&1 ||
	Fatal "error creating satellite users: $user2 already exists"

cd /etc/pkg-build-priv/user.d

if [ -z "$number" ]; then
	config="$caller"
else
	config="$caller:$number"
fi

! [ -e "$config" ] ||
	Fatal "config file '$config' for user '$caller' already exists"

# We are going to create files.
umask 077

# First satellite.
/usr/sbin/useradd -M -c "pkg-build satellite for $caller" -d /dev/null -s /dev/null "$user1" ||
	Fatal "error creating satellite user $user1"

# Second satellite.
/usr/sbin/useradd -M -c "pkg-build satellite for $caller" -d /dev/null -s /dev/null "$user2" ||
	Fatal "error creating satellite user $user2"

# Add caller to pkg-build group and first satellite group.
glist="$((id -Gn "$caller" |tr ' ' '\n' && id -gn "$user1" && echo pkg-build) |sort -u |xargs echo |tr ' ' ,)"
/usr/sbin/usermod -G "$glist" "$caller" ||
	Fatal "error updating groups for user $caller"

# Create config.
cat >"$config" <<__EOF__
user1=$user1
user2=$user2
__EOF__

